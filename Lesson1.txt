---
---constant.ts file
export const __prod__  = process.env.NODE_ENV === "production";

----Entity post.js
import { Entity, PrimaryKey, Property } from "@mikro-orm/core";

@Entity()
export class Post {

    @PrimaryKey()
    id!: number;

    @Property({ type: "date" })
    createdAt = new Date();

    @Property({ type: "date", onUpdate: () => new Date() })
    updatedAt = new Date();

    @Property({ type: "text" })
    title!: string;
    //
}


----index.js

import { MikroORM } from "@mikro-orm/core";
import { __prod__ } from "./constant";
import { Post } from "./entities/Post";
import mikroOrmConfig from "./mikro-orm.config";

const main = async () => {
    //console.log("__dirname", __dirname)
    const orm = await MikroORM.init(mikroOrmConfig);
    //await orm.getMigrator().up(); //this code do the migration


    const post = orm.em.create(Post, { title: 'End of the game1' });
    await orm.em.persistAndFlush(post);
    console.log('----or sql 2----------');
    await orm.em.nativeInsert(Post, { title: 'my first5 post' });

    const posts = await orm.em.find(Post, {})
    //const posts = await orm.em.find(Post,{id:57)
    console.log(posts)
};

main().catch(err => {
    console.log(err);
})

----mikro-orm.config.ts
import { Post } from "./entities/Post";
import { __prod__ } from "./constant";
import { MikroORM } from "@mikro-orm/core";
import path from "path";


export default {
    migrations: {
        path: path.join(__dirname, './migrations'), // path to the folder with migrations
        pattern: /^[\w-]+\d+\.[tj]s$/, // regex pattern for the migration files
    },
    entities: [Post],
    dbName: 'liredit',
    user: 'postgres',
    password: 'admin@123',
    type: "postgresql",
    debug: !__prod__,
} as Parameters<typeof MikroORM.init>[0];


----Package.json
{
  "name": "mernall",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "watch": "tsc -w",
    "dev": "nodemon dist/index.js",
    "start": "node dist/index.js",
    "start2": "ts-node src/index.ts",
    "dev2": "nodemon --exec ts-node src/index.ts"
  },
  "author": "Devesh Srivastava <devesh.kr.srivastava@gmail.com> (example.com)",
  "license": "MIT",
  "devDependencies": {
    "@types/express": "^4.17.9",
    "@types/node": "^14.14.7",
    "nodemon": "^2.0.6",
    "ts-node": "^9.0.0",
    "typescript": "^4.0.5"
  },
  "dependencies": {
    "@mikro-orm/cli": "^4.3.0",
    "@mikro-orm/core": "^4.3.0",
    "@mikro-orm/migrations": "^4.3.0",
    "@mikro-orm/postgresql": "^4.3.0",
    "apollo-server-express": "^2.19.0",
    "express": "^4.17.1",
    "graphql": "^15.4.0",
    "pg": "^8.5.1",
    "type-graphql": "^1.1.1"
  },
  "mikro-orm": {
    "useTsNode": true,
    "configPaths": [
      "./src/mikro-orm.config.ts",
      "./dist/mikro-orm.config.js"
    ]
  }
}


